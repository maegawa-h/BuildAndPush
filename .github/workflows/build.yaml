name: build
on: 
  workflow_dispatch
#  push:
#    paths:
#      - 'src/Sample/**'
#    tags:
#      - '*'
#    branches: [ publish ]
#  pull_request:
#    branches: [ publish ]

jobs:
  build:
    runs-on: windows-latest
    
    steps:    
      # リポジトリのチェックアウト
      - uses: actions/checkout@v2
    
      # dotnetのインストール (3.1)
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '3.1.x'

      # ndextのインストール @https://docs.nextdesign.app/extension/docs/tools/ndext/installation
      - name: Setup NDext
        run: |
          dotnet tool install --global NDExt
          ndext install

      # ビルドとパッケージング
      - name: Build & Pack (NDExt)
        run: |
          $base_dir = (Convert-Path .)
          $pkg_dir = $base_dir + "\packages"
          $src_dir = $base_dir + "\src"

          Push-Location $src_dir
          foreach ($dir in $(Get-ChildItem * | ? { $_.PSIsContainer }))
          {
            Push-Location $dir
            if ($(Get-ChildItem *.csproj -Recurse | Test-Path))
            {
              $xml_doc = [xml](cat $(Get-ChildItem *.csproj -Recurse) -enc utf8)
              $xml_nav = $xml_doc.CreateNavigator()

              $pkg_name = $pkg_dir + "\"
              $pkg_name += $xml_nav.Select("//PackageId").Value
              $pkg_name += "."
              $pkg_name += $xml_nav.Select("//Version").Value
              $pkg_name += ".nupkg"
          
              if (!$(Test-Path $pkg_name))
              {
                ndext pack o $pkg_dir
              }
              else
              {
                echo ($msg = $pkg_name + "is exist")
              }
          
            }
            Pop-Location
          }
          Pop-Location

      # Nugetサーバへのnupkgの登録
      - name: Publish to GitHub Packages
        run: |
          Push-Location ./packages
          dotnet nuget push "*.nupkg" --api-key ${{secrets.NU_SERVER_KEY}} --source ${{secrets.NU_SERVER}} --skip-duplicate

      # Slack への通知（SlackのGithubアプリで代替）
